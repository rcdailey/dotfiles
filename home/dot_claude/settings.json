{
  "cleanupPeriodDays": 7,
  "env": {
    "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": "1",
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "USE_BUILTIN_RIPGREP": "0"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(apt policy:*)",
      "Bash(arp:*)",
      "Bash(awk:*)",
      "Bash(brew info:*)",
      "Bash(brew search:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(diff:*)",
      "Bash(dig:*)",
      "Bash(du:*)",
      "Bash(echo:*)",
      "Bash(find:*)",
      "Bash(flatpak info:*)",
      "Bash(flatpak list:*)",
      "Bash(flatpak override:*)",
      "Bash(gh auth status:*)",
      "Bash(gh browse:*)",
      "Bash(gh completion:*)",
      "Bash(gh config get:*)",
      "Bash(gh gist list:*)",
      "Bash(gh gist view:*)",
      "Bash(gh gpg-key list:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh label:*)",
      "Bash(gh org list:*)",
      "Bash(gh org view:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh release download:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run download:*)",
      "Bash(gh run list:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh search:*)",
      "Bash(gh ssh-key list:*)",
      "Bash(gh status:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow validate:*)",
      "Bash(gh workflow view:*)",
      "Bash(git add:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git ls-tree:*)",
      "Bash(git mv:*)",
      "Bash(git reflog:*)",
      "Bash(git rev-parse:*)",
      "Bash(git status:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(ip route:*)",
      "Bash(json5:*)",
      "Bash(ls:*)",
      "Bash(mise bin-paths:*)",
      "Bash(mise config:*)",
      "Bash(mise doctor:*)",
      "Bash(mise env:*)",
      "Bash(mise exec:*)",
      "Bash(mise help:*)",
      "Bash(mise latest:*)",
      "Bash(mise ls-remote:*)",
      "Bash(mise ls:*)",
      "Bash(mise outdated:*)",
      "Bash(mise registry:*)",
      "Bash(mise search:*)",
      "Bash(mise settings:*)",
      "Bash(mise tool:*)",
      "Bash(mise version:*)",
      "Bash(mise where:*)",
      "Bash(mise which:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(nmap:*)",
      "Bash(npm:*)",
      "Bash(nslookup:*)",
      "Bash(ping:*)",
      "Bash(pip:*)",
      "Bash(pre-commit run:*)",
      "Bash(ps:*)",
      "Bash(pwd:*)",
      "Bash(python :*.py:*)",
      "Bash(python:*)",
      "Bash(python3 -m black:*)",
      "Bash(python3 :*.py:*)",
      "Bash(python3:*)",
      "Bash(rclone ls:*)",
      "Bash(rclone lsd:*)",
      "Bash(rclone tree:*)",
      "Bash(renovate-config-validator:*)",
      "Bash(renovate:*)",
      "Bash(rg:*)",
      "Bash(rm)",
      "Bash(rmdir:*)",
      "Bash(sed:*)",
      "Bash(snap list:*)",
      "Bash(sort:*)",
      "Bash(source:*)",
      "Bash(sqlite3:*)",
      "Bash(tail:*)",
      "Bash(tar:*)",
      "Bash(test:*)",
      "Bash(time:*)",
      "Bash(touch:*)",
      "Bash(tree:*)",
      "Bash(true)",
      "Bash(uniq:*)",
      "Bash(unzip:*)",
      "Bash(wc:*)",
      "Bash(wget:*)",
      "Bash(which:*)",
      "Bash(xclip:*)",
      "Bash(xmlstarlet:*)",
      "Bash(yamllint:*)",
      "Bash(yq eval-all:*)",
      "Bash(yq eval:*)",
      "Bash(yq:*)",
      "Bash(zip:*)",
      "mcp__context7__get-library-docs",
      "mcp__context7__resolve-library-id",
      "mcp__ide__getDiagnostics",
      "mcp__octocode__githubGetFileContent",
      "mcp__octocode__githubSearchCode",
      "mcp__octocode__githubSearchRepositories",
      "mcp__octocode__githubViewRepoStructure",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__tavily__tavily-crawl",
      "mcp__tavily__tavily-extract",
      "mcp__tavily__tavily-search",
      "mcp__markitdown__convert_to_markdown"
    ],
    "deny": [
      "WebFetch",
      "WebSearch"
    ],
    "ask": [
      "Bash(git push:*)"
    ],
    "defaultMode": "default"
  },
  "model": "sonnet",
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/tool-redirections.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/gh-api-readonly.py"
          }
        ]
      },
      {
        "matcher": "WebFetch",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/webfetch-github-redirect.sh"
          }
        ]
      },
      {
        "matcher": "mcp__tavily__*",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/tool-redirections.py"
          }
        ]
      },
      {
        "matcher": "LS",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/tool-redirections.py"
          }
        ]
      },
      {
        "matcher": "Search",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/tool-redirections.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/show-cwd.sh",
            "timeout": 10
          }
        ]
      },
      {
        "matcher": "mcp__context7__resolve-library-id",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/context7-doc-preference.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/session-start.sh",
            "timeout": 10
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/improve-prompt.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/conciseness-reminder.sh",
            "timeout": 5
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/context7-requirement.sh",
            "timeout": 5
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "npx -y ccstatusline@latest",
    "padding": 0
  },
  "forceLoginMethod": "claudeai",
  "spinnerTipsEnabled": false,
  "alwaysThinkingEnabled": false,
  "enableAllProjectMcpServer": true
}
