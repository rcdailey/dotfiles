#!/bin/bash

set -e

# Parse command line arguments
USER_SCOPE=false
REMOVE_MODE=false
while [[ $# -gt 0 ]]; do
    case $1 in
        --user)
            USER_SCOPE=true
            shift
            ;;
        --remove)
            REMOVE_MODE=true
            shift
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 [--user] [--remove]"
            echo "  --user    Configure at user level instead of local level"
            echo "  --remove  Remove the MCP server configuration"
            exit 1
            ;;
    esac
done

if [[ "$USER_SCOPE" == true ]]; then
    SCOPE="user"
    SCOPE_MESSAGE="user scope"
else
    SCOPE="local"
    SCOPE_MESSAGE="local scope"
fi

if [[ "$REMOVE_MODE" == true ]]; then
    echo "=== GitHub MCP Server Removal ==="
    echo "Removing GitHub MCP server from $SCOPE_MESSAGE..."
    
    claude mcp remove github -s "$SCOPE"
    
    echo "✅ GitHub MCP server removed successfully from $SCOPE_MESSAGE!"
    exit 0
fi

echo "=== GitHub MCP Server Setup ==="

# Install gh via brew if it doesn't exist
if ! command -v gh &> /dev/null; then
    echo "Installing GitHub CLI..."
    brew install gh
fi

# Set browser for cross-platform compatibility
case "$(uname -s)" in
    Darwin*)
        export BROWSER="open"
        ;;
    Linux*)
        export BROWSER="xdg-open"
        ;;
    CYGWIN*|MINGW*|MSYS*)
        export BROWSER="cmd.exe /c start"
        ;;
esac
echo "BROWSER set to: $BROWSER"

# Check if already authenticated
if gh auth status &> /dev/null; then
    echo "Already authenticated with GitHub"
else
    echo "Authenticating with GitHub..."
    echo "If browser doesn't open automatically, you'll see a device code and URL to visit manually."
    gh auth login --git-protocol ssh --skip-ssh-key --web
fi

# Get the token
echo "Obtaining GitHub token..."
TOKEN=$(gh auth token)

if [[ -z "$TOKEN" ]]; then
    echo "Failed to obtain GitHub token"
    exit 1
fi

echo "Token obtained successfully"

# Configure Claude MCP server
echo "Configuring GitHub MCP server..."

claude mcp add github "https://api.githubcopilot.com/mcp/" \
    -s "$SCOPE" \
    -t http \
    -H "Authorization: Bearer $TOKEN"

echo "✅ GitHub MCP server configured successfully!"
echo "The server is configured at $SCOPE_MESSAGE and will persist for this $([ "$USER_SCOPE" == true ] && echo "user across all projects" || echo "project only")."