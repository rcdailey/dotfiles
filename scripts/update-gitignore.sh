#!/usr/bin/env zsh

set -euo pipefail

# Script to update .gitignore using gitignore.io templates and custom patterns

# Configuration
GITIGNORE_IO_URL="https://www.toptal.com/developers/gitignore/api"
TEMPLATES=("archives" "macos" "windows" "python")
CUSTOM_PATTERNS=(
    "*.stackdump"
    "/key.txt"
)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if we're in the repository root
if [[ ! -d .git ]]; then
    print_error "This script must be run from the repository root directory"
    exit 1
fi

# Create temporary file for new .gitignore content
TEMP_FILE=$(mktemp)
trap "rm -f $TEMP_FILE" EXIT

print_status "Generating new .gitignore file..."

# Add header
cat >> "$TEMP_FILE" << 'EOF'
# This file is automatically generated by scripts/update-gitignore.sh
# DO NOT EDIT MANUALLY - your changes will be overwritten
# To add custom patterns, modify the CUSTOM_PATTERNS array in the script

EOF

# Fetch templates from gitignore.io
print_status "Fetching templates from gitignore.io..."
TEMPLATE_LIST=$(IFS=,; echo "${TEMPLATES[*]}")

if ! curl -sL "$GITIGNORE_IO_URL/$TEMPLATE_LIST" >> "$TEMP_FILE"; then
    print_error "Failed to fetch templates from gitignore.io"
    exit 1
fi

# Add custom patterns section
if [[ ${#CUSTOM_PATTERNS[@]} -gt 0 ]]; then
    cat >> "$TEMP_FILE" << 'EOF'

# Custom patterns specific to this repository
EOF

    for pattern in "${CUSTOM_PATTERNS[@]}"; do
        echo "$pattern" >> "$TEMP_FILE"
    done
fi

# Replace the existing .gitignore
if cp "$TEMP_FILE" .gitignore; then
    print_success "Successfully updated .gitignore"
    print_status "Template sources: ${TEMPLATES[*]}"
    print_status "Custom patterns: ${#CUSTOM_PATTERNS[@]} pattern(s)"
else
    print_error "Failed to update .gitignore"
    exit 1
fi

# Show summary of what was added
print_status "Summary of .gitignore contents:"
wc -l .gitignore | awk '{print "  Total lines: " $1}'
rg '^#' .gitignore | wc -l | awk '{print "  Comment lines: " $1}'
rg -v '^#|^$' .gitignore | wc -l | awk '{print "  Pattern lines: " $1}'

print_success "Done! Review the changes with: git diff .gitignore"
